/* Pseudoselectores :root se utiliza para almacenar variables en css (custom properties) */
:root {
  /* Paleta de colores */
  --blanco: #fff;
  --oscuro: #212121;
  --primario: #ffc107;
  --secundario: #00bdd6;
  --secundario-dark: #00b0c7;
  --terciario: #757575;
  --grisclaro: #dfe9f3;
  --black: #323333;
  --black2: #2a2b2b;
  --gray3: #4b4c4d;
}

/* Unidad de medida rem es recomendada para que el tamaño de fuente se adapte a los diferentes dispositivos ya que este se creo con esa finalidad */
/* Estas dos lineas hace que el rem sea muy facil de usar y que tambien sea adaptativo a todos los dispositos con distinta densidad de pixeles */
html {
  font-size: 62.5%;
  /*box-sizing: border-box; evita que al agregar mas pixeles al padding o border el elemento no aumente de tamaño, es necesario usar esta configuracion para manipular mejor box model de css*/
  box-sizing: border-box; /*Hack para box model*/
}

/*Enlace del Box-sizing: Border-box https://www.paulirish.com/2012/box-sizing-border-box-ftw/*/

/*Agrega la configuracion a todo los elementos css, incluidos elementos que no existen como tal :before y :after, en general este codigo soluciona todos los probleas de box-size */
*,
*:before,
*:after {
  /**/
  box-sizing: inherit;
}

body {
  font-size: 16px; /* 1rem = 10px*, tiena la ventaja que se adapta mejor a las pantallas*/
  font-family: 'Montserrat', sans-serif;

  /*background-image: linear-gradient(); se usa para aplicar un degradado a nuestra pagina de abajo hacia arriba, primero se indica de donde empieza el degradado, luego el color con el que inicia y desde donde en este caso desde el % desde abajo, luego se indica el color hacia donde va ir. Se pueden usar muchas direcciones*/
  background-image: linear-gradient(
    to top,
    var(--grisclaro) 0%,
    var(--blanco) 100%
  );
  color: var(--gray3);
  text-align: center;
}

/*Es recomendable estrusturar de los selectores mas generales a los mas especificos*/

h1 {
  font-size: 3.8rem;
}

h2 {
  font-size: 2.8rem;
}

h3 {
  font-size: 1.8rem;
}

h1,
h2,
h3 {
  text-align: center;
}

a {
  background-color: transparent;
  text-decoration: none;
}

iframe {
  width: 80%;
}
.sombra {
  -webkit-box-shadow: -1px -1px 15px 3px rgba(173, 173, 173, 1);
  -moz-box-shadow: -1px -1px 15px 3px rgba(173, 173, 173, 1);
  box-shadow: -1px -1px 15px 3px rgba(173, 173, 173, 1);
  background-color: var(--blanco);

  padding: 2rem 0 0 0;
  border-radius: 1rem;
}

/*Especifidad en css, mientras mas especifico sea un selector no importa que tantas veces haya sido seleccionado*/
h1.titulo {
  text-align: center;
}

.titulo span {
  font-size: 2rem;
}

.contenedor {
  /*max-width: 120rem en vez de poner un valor fico con width se usa max-widtth para indicar que toma 1200px como maximo solomanete si hay ese espacio disponible, sino toma el 100% que es el ancho por default de cualquier div, que por defecto toma todo el espacio disponible, esto evita que se haga scroll al disminuir los pixeles de la pagina*/
  max-width: 120rem; /*1200px*/

  /*Centrar nav*/
  /* margin-top: 0;
  margin-right: auto;
  margin-bottom: 0;
  margin-left: auto; 

  margin: 0 auto; es otra forma de hacerlo*/
  margin: 0 auto 0 auto;
}

.boton {
  /*linear-gradient() crea una imagen que consiste en una transición progresiva entre dos o más colores a lo largo de una línea recta*/
  background: linear-gradient(var(--secundario), var(--secundario-dark));
  color: var(--blanco);
  padding: 1rem 3rem;
  margin-top: 3rem;
  font-size: 2rem;
  text-decoration: none;
  border-radius: 0.8rem;
  text-transform: uppercase;
  font-weight: bold;
  width: 90%;
  text-align: center;
}

.nav-bg {
  background: linear-gradient(var(--secundario), var(--secundario-dark));
}

.navegacion-principal {
  /*display: flex; permite modificar las posiciones de los elementos, flex = coloca los elementos hijos de izquierda a derecha, */
  /*Flexbos fue diseñado para alinear elementos en tus diseños, layouts*/
  display: flex;
  flex-direction: column;

  /* align-items: center; manera de centrar los elementos del div con flexbox */
}

.navegacion-principal a {
  /*manera de crentrar los elementos del div para el responsive*/
  display: block;
  text-align: center;

  color: var(--blanco);
  padding: 1rem;
  text-decoration: none;
  font-size: 2rem;
  font-weight: 700; /* Grosor de la fuente  */
}

.navegacion-principal a:hover {
  background-color: #ffc107;
  color: var(--oscuro);
}

/*background video*/
.hero {
  width: 100%;
  min-height: 500px;
  padding: 20px;
  margin-bottom: 2rem;
}
#hero1 {
  background-color: #3333337d;
  color: #fff;
}
#hero1 {
  position: relative;
  overflow: hidden;
}
#bg-video {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  min-width: 100%;
  min-height: 100%;
}

#hero1 .contenido-hero {
  position: absolute;

  background-color: rgba(0, 0, 0, 0.5);

  /*Toma todo el espaco de hero1 con amsolute usando coordenadas*/
  bottom: 0;
  left: 0;
  right: 0;
  top: 0;

  /*Para centrar se usa flexbox, se usa para alinear vertical y horizontalmente*/
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

.contenido-hero h2,
.contenido-hero p {
  color: var(--blanco);
}

.ubicacion {
  display: flex;
  align-items: flex-end;
}

/*proyectos*/
.proyectos {
  text-align: center;
  border-color: var(--primario);

  transition: box-shadow 0.3s ease;
  background-image: linear-gradient(
    to top,
    var(--grisclaro) 0%,
    var(--blanco) 100%
  );
  margin: 1rem 0;
  border-radius: 0.5rem;
  padding: 0.25rem 0;
  cursor: pointer;
}

.proyectos h2,
.proyectos p {
  margin: 1rem;
}

.proyectos:hover {
  /* funciona igual que text-shadox en donde se indica cuanto se va a desplzar la sombra hacia arriba, abajo y su difuminacion.*/
  /* 
    box-shadow: derecha abajo difuminacion color
    */
  box-shadow: 0 0.1rem 0.4rem rgba(0, 0, 0, 0.3);
}

#skillset {
  padding: 1rem;
  background: linear-gradient(var(--secundario), var(--secundario-dark));
  color: var(--blanco);
  /* max-width: 40rem; */
}

#portaf {
  padding: 1rem;
}

#skillset > div {
  grid-gap: 1.2rem;
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  margin: 1.6rem;
}
#skillset img {
  border-radius: 1rem;
  cursor: context-menu;
  max-width: 7rem;
}
#skillset > div > div {
  position: relative;
}
#skillset span {
  background-color: rgba(0, 0, 0, 0.75);
  border-radius: 0.5rem;
  left: 50%;
  opacity: 0;
  padding: 0.5rem 0;
  pointer-events: none;
  position: absolute;
  text-align: center;
  top: -40px;
  transform: translate(-60px, 10px);
  transition: opacity 0.3s ease, transform 0.3s ease;
  width: 120px;
  z-index: 1;
}
#skillset > div > div:hover span {
  opacity: 1;
  transform: translate(-60px);
}
#skillset span:after {
  border: 5px solid transparent;
  border-top-color: rgba(0, 0, 0, 0.75);
  content: '';
  left: 50%;
  margin-left: -5px;
  position: absolute;
  top: 100%;
}

#experiencia {
  padding: 1rem;
}
#experiencia img {
  background: #fff;
  border: 5px solid var(--secundario);
  border-radius: 25px;
  cursor: pointer;
  height: 150px;
  padding: 2rem;
  transition: border-radius 0.3s ease, box-shadow 0.3s ease;
  width: 150px;
}
#experiencia h4 {
  color: var(--gray3);
  font-size: 1.5rem;
  margin-bottom: 3rem;
  letter-spacing: 0.3rem;
}

#experiencia img:hover {
  border-radius: 0;
  box-shadow: 0 0 10px 1px var(--gray2);
}

footer {
  background: linear-gradient(var(--black), var(--black2));
  padding: 2rem 0;
  color: var(--blanco);
  align-items: center;
}

small {
  font-size: 80%;
}

/*RESPONSIVE*/

/*Recomendado usar >user snippets para automatizar el proceso*/

/*ejecuta el codigo a partir de las pantallas de 768 px (tablets)*/

@media (min-width: 768px) {
  /*lo que se tenia anteriormente en el .navegacion-principal se hereda automaticamente solo se hacen los cambios que sean necesarios en este caso color los elementos de manera vertical o lista.*/
  .navegacion-principal {
    flex-direction: row;
    /*ustify-content: space-between; distribute los elelemtos con espacios iguales */
    justify-content: space-between;
  }
}

@media (min-width: 768px) {
  .boton {
    /*auto se recetea el boton */
    width: auto;
  }
}

@media (min-width: 768px) {
  .portafolio,
  .experiencia {
    display: grid;
    padding: 1rem;
    /*Se crean tres columnas*/
    /* grid-template-columns: 33.3% 33.3% 33.3%; */
    /* grid-template-columns: 1fr 1fr 1fr; */
    grid-template-columns: repeat(3, 1fr); /*Crea tres veces 1fr = 3.33%*/
    column-gap: 10px; /*serpa 10px entre las columnas*/
  }
}

/*MODAL*/
/*Efecto*/
.modalmask {
  position: fixed;
  font-family: Arial, sans-serif;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: rgba(0, 0, 0, 0.8);
  z-index: 99999;
  opacity: 0;
  -webkit-transition: opacity 400ms ease-in;
  -moz-transition: opacity 400ms ease-in;
  transition: opacity 400ms ease-in;
  pointer-events: none;
}
.modalmask:target {
  opacity: 1;
  pointer-events: auto;
}

/*Formato de la ventana*/
.modalbox {
  width: 300px;
  position: relative;
  padding: 5px 20px 13px 20px;
  background: #fff;
  border-radius: 3px;
  -webkit-transition: all 500ms ease-in;
  -moz-transition: all 500ms ease-in;
  transition: all 500ms ease-in;
}

@media (min-width: 768px) {
  .modalbox {
    width: 400px;
  }
}

/*Movimientos*/
.movedown {
  margin: 0 auto;
}
.rotate {
  margin: 10% auto;
  -webkit-transform: scale(-5, -5);
  transform: scale(-5, -5);
}
.resize {
  margin: 10% auto;
  width: 0;
  height: 0;
}
.modalmask:target .movedown {
  margin: 10% auto;
}
.modalmask:target .rotate {
  transform: rotate(360deg) scale(1, 1);
  -webkit-transform: rotate(360deg) scale(1, 1);
}

.modalmask:target .resize {
  width: 400px;
  height: 200px;
}

/*Boton de cerrar*/
.close {
  background: #606061;
  color: #ffffff;
  line-height: 25px;
  position: absolute;
  right: 1px;
  text-align: center;
  top: 1px;
  width: 24px;
  text-decoration: none;
  font-weight: bold;
  border-radius: 3px;
}

.close:hover {
  background: #faac58;
  color: #222;
}
